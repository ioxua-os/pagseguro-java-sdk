group 'br.com.skywalker.pagseguro'
version '4.4.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(group: 'junit', name: 'junit', version: '4.13')
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '2.28.2')
    testImplementation(group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7')
    testImplementation(group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.5')
    testImplementation(group: 'org.javassist', name: 'javassist', version: '3.24.1-GA')
    testImplementation(group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0')
    testImplementation(group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3')
    testImplementation(group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3')
    testImplementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2')
    testImplementation(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.2')

    compileOnly(group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0')
    compileOnly(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21')
    compileOnly(group: 'commons-logging', name: 'commons-logging', version: '1.2')
    compileOnly(group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3')
    compileOnly(group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3')
    compileOnly(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2')
    compileOnly(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.11.2')
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/newgotecnologia/pagseguro-java-sdk")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
